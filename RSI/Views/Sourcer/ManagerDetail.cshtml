@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    @Styles.Render("~/bundles/style")
    @Styles.RenderFormat("<link href='{0}' rel='stylsheet' type='text/css' media='print' />", "~/bundles/style/print")
    <style>
        body {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .fa {
            cursor: pointer;
        }

        table {
            border-collapse: collapse;
            table-layout: fixed;
            width: 100%;
        }

        .pane-hScroll {
            overflow: auto;
            width: 100%;
        }

        .pane-vScroll {
            overflow-y: auto;
            overflow-x: hidden;
        }


        th, td {
            word-break: break-all;
            /*border: 1px solid red;*/
        }

        .plusicon {
            width: 30px;
        }

        .materialgroup {
            width: 130px;
        }

        .partsgroup {
            width: 100px;
        }

        .materialparts {
            width: 110px;
        }

        .parttype {
            width: 80px;
        }

        .partno {
            width: 100px;
        }

        .partdesc {
            width: 165px;
        }

        .partspec {
            width: 88px;
        }

        .usage {
            width: 60px;
        }

        .pmprice {
            width: 75px;
        }

        .moq {
            width: 60px;
        }

        .mockup {
            width: 60px;
        }

        .tooling {
            width: 60px;
        }

        .pmamount {
            width: 70px;
        }

        .sourcerprice {
            width: 65px;
        }

        .sourceramount {
            width: 70px;
        }

        .gap {
            width: 105px;
        }

        .topmremark {
            width: 80px;
        }

        .trendprice {
            width: 75px;
        }
    </style>
</head>
<body>
    @{
        var rsi_no = RSI.Models.Entity.Validate.DecryptValue(Request.QueryString["rsi_no"]);
        var part_type = RSI.Models.Entity.Validate.DecryptValue(Request.QueryString["part_type"]);
        var bu = RSI.Models.Entity.Validate.DecryptValue(Request.QueryString["bu"]);
        System.Data.DataTable pricetrend = RSI.Models.Entity.RSI_ConfigEntityDAL.GetPriceTrend(rsi_no);
    }
    <div class="container-fluid">
        <div style="text-align:center; margin-top:5px;margin-bottom:5px;">
            說明：請選擇提供給PM的價格詳細度(Price Group)，會依據價格詳細度將單價做加總顯示給PM
        </div>
        <div class="center-block" style="display:table; margin-top:5px;margin-bottom:5px;">
            <div style="display:table-row">
                <div style="display:table-cell"> Price Group</div>
                @{ var price_group = RSI.Models.Manager.Part_InfoManager.GetPrice_Group(rsi_no, part_type, "SL_PRICE_GROUP"); }
                @for (int i = 0; i < price_group.Rows.Count; i++)
                {
                    System.Data.DataRow item = price_group.Rows[i];
                    string check = i == 0 ? "checked" : "";
                    <div style="display:table-cell">
                        <label class="checkbox-inline">
                            <input type="radio" name="optionsPriceGroup" value="@item["ATTRIBUTE3"]" @check>
                            @item["ATTRIBUTE4"]
                        </label>
                    </div>
                }
            </div>
            <div style="display:table-row">
                <div style="display:table-cell">Portfolio Name</div>
                @{ var group_name = RSI.Models.Manager.H_Product_DetailManager.GetGroupID(rsi_no); }
                @for (int i = 0; i < group_name.Count(); i++)
                {
                    string check = i == 0 ? "checked" : "";
                    <div style="display:table-cell">
                        <label class="checkbox-inline">
                            <input type="radio" name="optionsGroupName" value="@group_name[i]" check>
                            @RSI.Models.Manager.H_Product_DetailManager.GetGroupName(rsi_no, group_name[i]);
                        </label>
                    </div>
                }
            </div>
        </div>
        <div class="pane-hScroll">
            <table>
                <thead>
                    <tr class="bg-light-blue">
                        <th class="text-center plusicon"><i class='fa fa-minus-square' id="all"></i></th>
                        <th class="text-center materialgroup">Material Group</th>
                        <th class="text-center partsgroup">Parts Group</th>
                        <th class="text-center materialparts">Material Parts</th>
                        <th class="text-center parttype">Part Type</th>
                        <th class="text-center partno">Part No</th>
                        <th class="text-center partdesc">Part Desc</th>
                        <th class="text-center partspec">Part Spec</th>
                        <th class="usage text-center">Usage</th>
                        <th class="pmprice text-center">PM<br />Price(USD)</th>
                        <th class="moq text-center">MOQ</th>
                        <th class="mockup text-center">Mockup Fee</th>
                        <th class="tooling text-center">Tooling Fee</th>
                        <th class="usage text-center">Valuation</th>
                        <th class="pmamount text-center">PM<br />Amount(USD)</th>
                        @{
                            if (pricetrend.Rows.Count > 0)
                            {
                                foreach (System.Data.DataRow row in pricetrend.Rows)
                                {
                                    <th class="trendprice text-center">@row["DESCRIPTION"].ToString()</th>
                                }
                            }
                        }
                        <th class="text-center sourcerprice">Sourcer<br />Price(USD)</th>
                        <th class="text-center sourceramount">Sourcer<br />Amount(USD)</th>
                        <th class="text-center gap">GAP<br />(PM - Sourcer)</th>
                        <th class="text-center topmremark">TO PM<br />Remark</th>
                    </tr>
                </thead>
            </table>
            <div class="pane-vScroll">
                <table class="datatable table">
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
    @Scripts.Render("~/bundles/script")
    <script>
        var mpprice_config = @RSI.Models.Entity.RSI_ConfigEntityDAL.GetPMPriceConfig(bu);
        Array.prototype.sum = function (prop) {
            var total = null;
            for (var i = 0, _len = this.length; i < _len; i++) {
                total += this[i][prop]
            }
            return total;
        }

        $(function(){
            window.moveTo(0, 0);
            window.resizeTo(screen.width, screen.height);

            getTableData();

            $(".pane-vScroll").css("height", screen.height - 70 - 60 - 150);
            $('body').css({ "background-image": "url(http://auhqhrap02.corpnet.auo.com/PB20/Webform/GetSpecialWaterMark.ashx)", "background-repeat": "repeat", "background-position": "center" });
        });

        function getTableData() {
            var groupid = $("input[name='optionsGroupName']:checked").val();
            var rsi_no = '@rsi_no';

            $.ajax({
                url: '/RSI/Sourcer/ManagerDetail',
                method: 'POST',
                data: {
                    rsi_no: rsi_no,
                    groupid: groupid
                },
                success: function (data) {
                    $('#all').removeClass('fa-plus-square').addClass('fa-minus-square');
                    drawtabledata(data);
                }
            });
        }


        function drawtabledata(data) {
            var trendPriceCount = parseInt('@pricetrend.Rows.Count');
            $("table tbody").html("");
            var pricegroup = $("input[name='optionsPriceGroup']:checked").val().toUpperCase();

            var prev_material_group, prev_parts_group, prev_material_parts, prev_material_type, prev_part_type;
            $.each(data, function (index, value) {
                if (index != 0 && prev_material_parts != value.MTL_PARTS && pricegroup != 'MATERIAL_GROUP' && pricegroup != 'PARTS_GROUP' && prev_part_type != 'ACD') {
                    var materialpart_footer = "<tr class='warning'><td class='text-center plusicon'></td>" +
                        "<td class='materialgroup'></td><td class='partsgroup'></td><td class='materialparts' colspan='2'>{8} Total</td>" +
                        "<td class='partno'></td><td class='partdesc'></td><td class='partspec'></td><td class='usage text-right'></td>" +
                        "<td class='pmprice text-right'>{0}</td><td class='moq text-right'>{1}</td><td class='mockup text-right'>{2}</td><td class='tooling text-right'>{3}</td>" +
                        "<td class='usage'></td><td class='pmamount text-right'>{4}</td>{pricetrend}<td class='sourcerprice text-right'>{5}</td><td class='sourceramount text-right'>{6}</td>" +
                        "<td class='gap text-right'>{7}</td><td class='topmremark'></td></tr>";
                    var temp_data = data.filter(function (d) { return d.MTL_GROUP === prev_material_group && d.PARTS_GROUP == prev_parts_group && d.MTL_PARTS == prev_material_parts && d.PART_TYPE == prev_part_type && d.ISCALCULATE == 'Y' });
                    var priceshowflag = temp_data.length == 0;
                    var pmprice = temp_data.sum("PRICE_PM");
                    var moq = temp_data.sum("MOQ");
                    var mockup = temp_data.sum("MOCKUP");
                    var tooling = temp_data.sum("TOOLING");
                    var pmamount = temp_data.sum("PMAMOUNT");
                    var sourcerprice = temp_data.sum("PRICE_SOURCER");
                    var sourceramount = temp_data.sum("SOURCERAMOUNT");
                    var gap = temp_data.sum("GAP");
                    materialpart_footer = materialpart_footer.replace("{0}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmprice))
                        .replace("{1}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(moq))
                        .replace("{2}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(mockup))
                        .replace("{3}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(tooling))
                        .replace("{4}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmamount))
                        .replace("{5}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourcerprice))
                        .replace("{6}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourceramount))
                        .replace("{7}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(gap))
                        .replace("{8}", prev_material_parts);
                    if (trendPriceCount > 0) {
                        var temp_all = null;

                        for (var i = 0; i < trendPriceCount; i++) {
                            var temp = "<td class='trendprice text-right'>{0}</td>";
                            var temptrendprice = temp_data.filter(function (d) { return d.pricetrend.length > 0; });
                            if (temptrendprice.length > 0) {
                                var temp_number = 0;
                                $.each(temptrendprice, function (a, b) {
                                    var item = b.pricetrend.filter(function (d) { return d.ID == i + 1; });
                                    if (item.length > 0) {
                                        temp_number += item[0].PRICE;
                                    }
                                });
                                temp = temp.replace('{0}', priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(temp_number));
                            }
                            else {
                                temp = temp.replace('{0}', priceshowflag ? "" : '0');
                            }
                            if (temp_all == null)
                                temp_all = temp;
                            else
                                temp_all += temp;
                        }
                        materialpart_footer = materialpart_footer.replace('{pricetrend}', temp_all);
                    }
                    else {
                        materialpart_footer = materialpart_footer.replace('{pricetrend}', '');
                    }

                    $(".datatable tbody").append(materialpart_footer);
                    prev_material_parts = value.MTL_PARTS;
                }

                if (index != 0 && (prev_parts_group != value.PARTS_GROUP || (prev_material_group != value.MTL_GROUP && prev_parts_group == value.PARTS_GROUP)) && (pricegroup != 'MATERIAL_GROUP')) {
                    var partgroup_footer = "<tr class='warning'><td class='text-center plusicon'></td>" +
                        "<td class='materialgroup'></td><td class='partsgroup' colspan='2'>{8} Total</td>" +
                        "<td class='parttype'></td><td class='partno'></td><td class='partdesc'></td><td class='partspec'></td><td class='usage text-right'></td>" +
                        "<td class='pmprice text-right'>{0}</td><td class='moq text-right'>{1}</td><td class='mockup text-right'>{2}</td><td class='tooling text-right'>{3}</td>" +
                        "<td class='usage'></td><td class='pmamount text-right'>{4}</td>{pricetrend}<td class='sourcerprice text-right'>{5}</td><td class='sourceramount text-right'>{6}</td>" +
                        "<td class='gap text-right'>{7}</td><td class='topmremark'></td></tr>";
                    var temp_data = data.filter(function (d) { return d.MTL_GROUP === prev_material_group && d.PARTS_GROUP == prev_parts_group && d.PART_TYPE == prev_part_type && d.ISCALCULATE == 'Y'});
                    var priceshowflag = temp_data.length == 0;
                    var pmprice = temp_data.sum("PRICE_PM");
                    var moq = temp_data.sum("MOQ");
                    var mockup = temp_data.sum("MOCKUP");
                    var tooling = temp_data.sum("TOOLING");
                    var pmamount = temp_data.sum("PMAMOUNT");
                    var sourcerprice = temp_data.sum("PRICE_SOURCER");
                    var sourceramount = temp_data.sum("SOURCERAMOUNT");
                    var gap = temp_data.sum("GAP");
                    partgroup_footer = partgroup_footer.replace("{0}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmprice))
                        .replace("{1}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(moq))
                        .replace("{2}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(mockup))
                        .replace("{3}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(tooling))
                        .replace("{4}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmamount))
                        .replace("{5}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourcerprice))
                        .replace("{6}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourceramount))
                        .replace("{7}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(gap))
                        .replace("{8}", prev_parts_group);
                    if (trendPriceCount > 0) {
                        var temp_all = null;

                        for (var i = 0; i < trendPriceCount; i++) {
                            var temp = "<td class='trendprice text-right'>{0}</td>";
                            var temptrendprice = temp_data.filter(function (d) { return d.pricetrend.length > 0; });
                            if (temptrendprice.length > 0) {
                                var temp_number = 0;
                                $.each(temptrendprice, function (a, b) {
                                    var item = b.pricetrend.filter(function (d) { return d.ID == i + 1; });
                                    if (item.length > 0) {
                                        temp_number += item[0].PRICE;
                                    }
                                });
                                temp = temp.replace('{0}', priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(temp_number));
                            }
                            else {
                                temp = temp.replace('{0}', priceshowflag ? "" : '0');
                            }
                            if (temp_all == null)
                                temp_all = temp;
                            else
                                temp_all += temp;
                        }
                        partgroup_footer = partgroup_footer.replace('{pricetrend}', temp_all);
                    }
                    else {
                        partgroup_footer = partgroup_footer.replace('{pricetrend}', '');
                    }

                    $(".datatable tbody").append(partgroup_footer);
                    prev_parts_group = value.PARTS_GROUP;
                }

                if (index == 0 || prev_material_group != value.MTL_GROUP) {
                    if (index != 0) {
                        var mtlgroup_footer = "<tr class='warning'><td class='plusicon'></td><td class='materialgroup' colspan='2'>{8} Total</td>" +
                            "<td class='materialparts'></td><td class='parttype'></td><td class='partno'></td><td class='partdesc'></td><td class='partspec'></td>" +
                            "<td class='usage text-right'></td><td class='pmprice text-right'>{0}</td><td class='moq text-right'>{1}</td><td class='mockup text-right'>{2}</td>" +
                            "<td class='tooling text-right'>{3}</td><td class='usage'></td><td class='pmamount text-right'>{4}</td>{pricetrend}<td class='sourcerprice text-right'>{5}</td>" +
                            "<td class='sourceramount text-right'>{6}</td><td class='gap text-right'>{7}</td><td class='topmremark'></td></tr>";
                        var temp_data = data.filter(function (d) { return d.MTL_GROUP === prev_material_group && d.PART_TYPE == prev_part_type && d.ISCALCULATE == 'Y' });
                        var priceshowflag = temp_data.length == 0;
                        var pmprice = temp_data.sum("PRICE_PM");
                        var moq = temp_data.sum("MOQ");
                        var mockup = temp_data.sum("MOCKUP");
                        var tooling = temp_data.sum("TOOLING");
                        var pmamount = temp_data.sum("PMAMOUNT");
                        var sourcerprice = temp_data.sum("PRICE_SOURCER");
                        var sourceramount = temp_data.sum("SOURCERAMOUNT");
                        var gap = temp_data.sum("GAP");
                        mtlgroup_footer = mtlgroup_footer.replace("{0}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmprice))
                            .replace("{1}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(moq))
                            .replace("{2}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(mockup))
                            .replace("{3}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(tooling))
                            .replace("{4}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmamount))
                            .replace("{5}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourcerprice))
                            .replace("{6}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourceramount))
                            .replace("{7}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(gap))
                            .replace("{8}", prev_material_group);
                        if (trendPriceCount > 0) {
                            var temp_all = null;

                            for (var i = 0; i < trendPriceCount; i++) {
                                var temp = "<td class='trendprice text-right'>{0}</td>";
                                var temptrendprice = temp_data.filter(function (d) { return d.pricetrend.length > 0; });
                                if (temptrendprice.length > 0) {
                                    var temp_number = 0;
                                    $.each(temptrendprice, function (a, b) {
                                        var item = b.pricetrend.filter(function (d) { return d.ID == i + 1; });
                                        if (item.length > 0) {
                                            temp_number += item[0].PRICE;
                                        }
                                    });
                                    temp = temp.replace('{0}', priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(temp_number));
                                }
                                else {
                                    temp = temp.replace('{0}', priceshowflag ? "" : '0');
                                }
                                if (temp_all == null)
                                    temp_all = temp;
                                else
                                    temp_all += temp;
                            }
                            mtlgroup_footer = mtlgroup_footer.replace('{pricetrend}', temp_all);
                        }
                        else {
                            mtlgroup_footer = mtlgroup_footer.replace('{pricetrend}', '');
                        }

                        $(".datatable tbody").append(mtlgroup_footer);
                    }

                    prev_material_group = value.MTL_GROUP;
                    //prev_parts_group = value.PARTS_GROUP;
                    //prev_material_parts = value.MTL_PARTS;
                    //prev_material_type = value.MTL_TYPE;
                    prev_part_type = value.PART_TYPE;
                    var mtl_header = "<tr><td class='text-center plusicon'><i class='fa fa-minus-square'></i></td>" +
                        "<td class='materialgroup'>{0}</td><td class='partsgroup'></td><td class='materialparts'></td>" +
                        "<td class='parttype'>{1}</td><td class='partno'></td><td class='partdesc'></td><td class='partspec'></td><td class='usage'></td>" +
                        "<td class='pmprice'></td><td class='moq'></td><td class='mockup'></td><td class='tooling'></td>" +
                        "<td class='usage'></td><td class='pmamount'></td>{pricetrend}<td class='sourcerprice'></td><td class='sourceramount'></td>" +
                        "<td class='gap'></td><td class='topmremark'></td></tr>";
                    if (trendPriceCount > 0) {
                        var temp_all = null;
                        for (var i = 0; i < trendPriceCount; i++) {
                            var temp = "<td class='trendprice'></td>";
                            if (temp_all == null)
                                temp_all = temp;
                            else
                                temp_all += temp;
                        }
                        mtl_header = mtl_header.replace('{pricetrend}', temp_all);
                    }
                    else {
                        mtl_header = mtl_header.replace('{pricetrend}', '');
                    }
                    mtl_header = mtl_header.replace("{0}", prev_material_group).replace("{1}", prev_part_type);
                    $(".datatable tbody").append(mtl_header);
                }

                prev_material_group = value.MTL_GROUP;
                prev_parts_group = value.PARTS_GROUP;
                prev_material_parts = value.MTL_PARTS;
                prev_material_type = value.MTL_TYPE;
                prev_part_type = value.PART_TYPE;

                var color = value.MTL_TYPE == "Special" ? "success" : "";
                var priceshowflag = (pricegroup == "PARTS_GROUP" || pricegroup == "MATERIAL_PARTS" || pricegroup == "MATERIAL_GROUP" || (pricegroup == 'PART_NO' && value.PART_TYPE == 'ACD') || value.ISCALCULATE != 'Y');
                var trstring = "<tr class='{color}'><td class='plusicon'></td><td class='materialgroup'>{0}</td><td class='partsgroup'>{1}</td>" +
                    "<td class='materialparts'>{2}</td><td class='parttype'>{16}</td><td class='partno'>{3}</td><td class='partdesc'>{4}</td><td class='partspec'>{5}</td>" +
                    "<td class='usage text-right'>{6}</td><td class='pmprice text-right'>{7}</td><td class='moq text-right'>{8}</td><td class='mockup text-right'>{9}</td>" +
                    "<td class='tooling text-right'>{10}</td><td class='usage'>{17}</td><td class='pmamount text-right'>{11}</td>{pricetrend}<td class='sourcerprice text-right'>{12}</td>" +
                    "<td class='sourceramount text-right'>{13}</td><td class='gap text-right'>{14}</td><td class='topmremark'>{15}</td></tr>";

                trstring = trstring.replace("{color}", color)
                    .replace("{0}", value.MTL_GROUP).replace("{1}", value.PARTS_GROUP).replace("{2}", value.MTL_PARTS)
                    .replace("{3}", value.PART_NO == null ? "" : value.PART_NO)
                    .replace("{4}", value.PART_DESC == null ? "" : value.PART_DESC)
                    .replace("{5}", value.PART_SPEC == null ? "" : value.PART_SPEC)
                    .replace("{6}", new Intl.NumberFormat("en-US", { maximumFractionDigits: 4 }).format(value.USAGE))
                    .replace("{7}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 4 }).format(value.PRICE_PM))
                    .replace("{8}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 4 }).format(value.MOQ))
                    .replace("{9}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 4 }).format(value.MOCKUP))
                    .replace("{10}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 4 }).format(value.TOOLING))
                    .replace("{11}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 4 }).format(value.PMAMOUNT))
                    .replace("{12}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 4 }).format(value.PRICE_SOURCER))
                    .replace("{13}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 4 }).format(value.SOURCERAMOUNT))
                    .replace("{14}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 4 }).format(value.GAP))
                    .replace("{15}", value.REMARK_PM == null ? "" : value.REMARK_PM)
                    .replace("{16}", value.PART_TYPE == null ? "" : value.PART_TYPE)
                    .replace("{17}", value.ISCALCULATE == null ? "" : value.ISCALCULATE);
                if (trendPriceCount > 0) {
                    var temp_all = null;
                    for (var i = 0; i < trendPriceCount; i++) {
                        var temp = "<td class='trendprice text-right'>{0}</td>";
                        if (value.pricetrend.length > 0) {
                            var price = value.pricetrend.filter(function (d) { return d.ID == i + 1; });
                            if (price.length > 0)
                                temp = temp.replace('{0}', priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 4 }).format(price[0].PRICE));
                            else
                                temp = temp.replace('{0}', '0');
                        }
                        else {
                            temp = temp.replace('{0}', priceshowflag? "" : '0');
                        }
                        if (temp_all == null)
                            temp_all = temp;
                        else
                            temp_all += temp;
                    }
                    trstring = trstring.replace('{pricetrend}', temp_all);
                }
                else {
                    trstring = trstring.replace('{pricetrend}', '');
                }
                $(".datatable tbody").append(trstring);
            });

            if (pricegroup != 'MATERIAL_GROUP' && pricegroup != 'PARTS_GROUP' && prev_part_type != 'ACD') {
                var materialpart_footer = "<tr class='warning'><td class='text-center plusicon'></td>" +
                    "<td class='materialgroup'></td><td class='partsgroup'></td><td class='materialparts' colspan='2'>{8} Total</td>" +
                    "<td class='partno'></td><td class='partdesc'></td><td class='partspec'></td><td class='usage text-right'></td>" +
                    "<td class='pmprice text-right'>{0}</td><td class='moq text-right'>{1}</td><td class='mockup text-right'>{2}</td><td class='tooling text-right'>{3}</td>" +
                    "<td class='usage'></td><td class='pmamount text-right'>{4}</td>{pricetrend}<td class='sourcerprice text-right'>{5}</td><td class='sourceramount text-right'>{6}</td>" +
                    "<td class='gap text-right'>{7}</td><td class='topmremark'></td></tr>";
                var temp_data = data.filter(function (d) { return d.MTL_GROUP === prev_material_group && d.PARTS_GROUP == prev_parts_group && d.MTL_PARTS == prev_material_parts && d.PART_TYPE == prev_part_type && d.ISCALCULATE == 'Y' });
                var priceshowflag = temp_data.length == 0;
                var pmprice = temp_data.sum("PRICE_PM");
                var moq = temp_data.sum("MOQ");
                var mockup = temp_data.sum("MOCKUP");
                var tooling = temp_data.sum("TOOLING");
                var pmamount = temp_data.sum("PMAMOUNT");
                var sourcerprice = temp_data.sum("PRICE_SOURCER");
                var sourceramount = temp_data.sum("SOURCERAMOUNT");
                var gap = temp_data.sum("GAP");
                materialpart_footer = materialpart_footer.replace("{0}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmprice))
                    .replace("{1}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(moq))
                    .replace("{2}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(mockup))
                    .replace("{3}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(tooling))
                    .replace("{4}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmamount))
                    .replace("{5}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourcerprice))
                    .replace("{6}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourceramount))
                    .replace("{7}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(gap))
                    .replace("{8}", prev_material_parts);
                if (trendPriceCount > 0) {
                    var temp_all = null;

                    for (var i = 0; i < trendPriceCount; i++) {
                        var temp = "<td class='trendprice text-right'>{0}</td>";
                        var temptrendprice = temp_data.filter(function (d) { return d.pricetrend.length > 0; });
                        if (temptrendprice.length > 0) {
                            var temp_number = 0;
                            $.each(temptrendprice, function (a, b) {
                                var item = b.pricetrend.filter(function (d) { return d.ID == i + 1; });
                                if (item.length > 0) {
                                    temp_number += item[0].PRICE;
                                }
                            });
                            temp = temp.replace('{0}', priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(temp_number));
                        }
                        else {
                            temp = temp.replace('{0}', priceshowflag ? "" : '0');
                        }
                        if (temp_all == null)
                            temp_all = temp;
                        else
                            temp_all += temp;
                    }
                    materialpart_footer = materialpart_footer.replace('{pricetrend}', temp_all);
                }
                else {
                    materialpart_footer = materialpart_footer.replace('{pricetrend}', '');
                }

                $(".datatable tbody").append(materialpart_footer);
            }

            if (pricegroup != 'MATERIAL_GROUP') {
                var partgroup_footer = "<tr class='warning'><td class='text-center plusicon'></td>" +
                    "<td class='materialgroup'></td><td class='partsgroup' colspan='2'>{8} Total</td>" +
                    "<td class='parttype'></td><td class='partno'></td><td class='partdesc'></td><td class='partspec'></td><td class='usage text-right'></td>" +
                    "<td class='pmprice text-right'>{0}</td><td class='moq text-right'>{1}</td><td class='mockup text-right'>{2}</td><td class='tooling text-right'>{3}</td>" +
                    "<td class='usage'></td><td class='pmamount text-right'>{4}</td>{pricetrend}<td class='sourcerprice text-right'>{5}</td><td class='sourceramount text-right'>{6}</td>" +
                    "<td class='gap text-right'>{7}</td><td class='topmremark'></td></tr>";
                var temp_data = data.filter(function (d) { return d.MTL_GROUP === prev_material_group && d.PARTS_GROUP == prev_parts_group && d.PART_TYPE == prev_part_type && d.ISCALCULATE == 'Y' });
                var priceshowflag = temp_data.length == 0;
                var pmprice = temp_data.sum("PRICE_PM");
                var moq = temp_data.sum("MOQ");
                var mockup = temp_data.sum("MOCKUP");
                var toolong = temp_data.sum("TOOLING");
                var pmamount = temp_data.sum("PMAMOUNT");
                var sourcerprice = temp_data.sum("PRICE_SOURCER");
                var sourceramount = temp_data.sum("SOURCERAMOUNT");
                var gap = temp_data.sum("GAP");
                partgroup_footer = partgroup_footer.replace("{0}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmprice))
                    .replace("{1}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(moq))
                    .replace("{2}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(mockup))
                    .replace("{3}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(toolong))
                    .replace("{4}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmamount))
                    .replace("{5}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourcerprice))
                    .replace("{6}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourceramount))
                    .replace("{7}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(gap))
                    .replace("{8}", prev_parts_group);
                if (trendPriceCount > 0) {
                    var temp_all = null;

                    for (var i = 0; i < trendPriceCount; i++) {
                        var temp = "<td class='trendprice text-right'>{0}</td>";
                        var temptrendprice = temp_data.filter(function (d) { return d.pricetrend.length > 0; });
                        if (temptrendprice.length > 0) {
                            var temp_number = 0;
                            $.each(temptrendprice, function (a, b) {
                                var item = b.pricetrend.filter(function (d) { return d.ID == i + 1; });
                                if (item.length > 0) {
                                    temp_number += item[0].PRICE;
                                }
                            });
                            temp = temp.replace('{0}', priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(temp_number));
                        }
                        else {
                            temp = temp.replace('{0}', priceshowflag ? "" : '0');
                        }
                        if (temp_all == null)
                            temp_all = temp;
                        else
                            temp_all += temp;
                    }
                    partgroup_footer = partgroup_footer.replace('{pricetrend}', temp_all);
                }
                else {
                    partgroup_footer = partgroup_footer.replace('{pricetrend}', '');
                }
                $(".datatable tbody").append(partgroup_footer);
            }

            var mtlgroup_footer = "<tr class='warning'><td class='plusicon'></td><td class='materialgroup' colspan='2'>{8} Total</td>" +
                "<td class='materialparts'></td><td class='parttype'></td><td class='partno'></td><td class='partdesc'></td><td class='partspec'></td>" +
                "<td class='usage text-right'></td><td class='pmprice text-right'>{0}</td><td class='moq text-right'>{1}</td><td class='mockup text-right'>{2}</td>" +
                "<td class='tooling text-right'>{3}</td><td class='usage'></td><td class='pmamount text-right'>{4}</td>{pricetrend}<td class='sourcerprice text-right'>{5}</td>" +
                "<td class='sourceramount text-right'>{6}</td><td class='gap text-right'>{7}</td><td class='topmremark'></td></tr>";
            var temp_data = data.filter(function (d) { return d.MTL_GROUP === prev_material_group && d.PART_TYPE == prev_part_type && d.ISCALCULATE == 'Y' });
            var priceshowflag = temp_data.length == 0;
            var pmprice = temp_data.sum("PRICE_PM");
            var moq = temp_data.sum("MOQ");
            var mockup = temp_data.sum("MOCKUP");
            var tooling = temp_data.sum("TOOLING");
            var pmamount = temp_data.sum("PMAMOUNT");
            var sourcerprice = temp_data.sum("PRICE_SOURCER");
            var sourceramount = temp_data.sum("SOURCERAMOUNT");
            var gap = temp_data.sum("GAP");
            mtlgroup_footer = mtlgroup_footer.replace("{0}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmprice))
                .replace("{1}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(moq))
                .replace("{2}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(mockup))
                .replace("{3}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(tooling))
                .replace("{4}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmamount))
                .replace("{5}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourcerprice))
                .replace("{6}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourceramount))
                .replace("{7}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(gap))
                .replace("{8}", prev_material_group);
            if (trendPriceCount > 0) {
                var temp_all = null;

                for (var i = 0; i < trendPriceCount; i++) {
                    var temp = "<td class='trendprice text-right'>{0}</td>";
                    var temptrendprice = temp_data.filter(function (d) { return d.pricetrend.length > 0; });
                    if (temptrendprice.length > 0) {
                        var temp_number = 0;
                        $.each(temptrendprice, function (a, b) {
                            var item = b.pricetrend.filter(function (d) { return d.ID == i + 1; });
                            if (item.length > 0) {
                                temp_number += item[0].PRICE;
                            }
                        });
                        temp = temp.replace('{0}', priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 10 }).format(temp_number));
                    }
                    else {
                        temp = temp.replace('{0}', priceshowflag ? "" : '0');
                    }
                    if (temp_all == null)
                        temp_all = temp;
                    else
                        temp_all += temp;
                }
                mtlgroup_footer = mtlgroup_footer.replace('{pricetrend}', temp_all);
            }
            else {
                mtlgroup_footer = mtlgroup_footer.replace('{pricetrend}', '');
            }
            $(".datatable tbody").append(mtlgroup_footer);

            var total_footer = "<tr class='warning'><td class='plusicon'></td><td class='materialgroup' colspan='2'>Total</td>" +
                "<td class='materialparts'></td><td class='parttype'></td><td class='partno'></td><td class='partdesc'></td><td class='partspec'></td>" +
                "<td class='usage text-right'></td><td class='pmprice text-right'>{0}</td><td class='moq text-right'>{1}</td><td class='mockup text-right'>{2}</td>" +
                "<td class='tooling text-right'>{3}</td><td class='usage'></td><td class='pmamount text-right'>{4}</td>{pricetrend}<td class='sourcerprice text-right'>{5}</td>" +
                "<td class='sourceramount text-right'>{6}</td><td class='gap text-right'>{7}</td><td class='topmremark'></td></tr>";
            var temp_data = data.filter(function (d) { return d.ISCALCULATE == 'Y' });
            var priceshowflag = temp_data.length == 0;
            var pmprice = temp_data.sum("PRICE_PM");
            var moq = temp_data.sum("MOQ");
            var mockup = temp_data.sum("MOCKUP");
            var tooling = temp_data.sum("TOOLING");
            var pmamount = temp_data.sum("PMAMOUNT");
            var sourcerprice = temp_data.sum("PRICE_SOURCER");
            var sourceramount = temp_data.sum("SOURCERAMOUNT");
            var gap = temp_data.sum("GAP");
            total_footer = total_footer.replace("{0}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmprice))
                .replace("{1}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(moq))
                .replace("{2}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(mockup))
                .replace("{3}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(tooling))
                .replace("{4}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(pmamount))
                .replace("{5}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourcerprice))
                .replace("{6}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(sourceramount))
                .replace("{7}", priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(gap));
            if (trendPriceCount > 0) {
                var temp_all = null;

                for (var i = 0; i < trendPriceCount; i++) {
                    var temp = "<td class='trendprice text-right'>{0}</td>";
                    var temptrendprice = temp_data.filter(function (d) { return d.pricetrend.length > 0; });
                    if (temptrendprice.length > 0) {
                        var temp_number = 0;
                        $.each(temptrendprice, function (a, b) {
                            var item = b.pricetrend.filter(function (d) { return d.ID == i + 1; });
                            if (item.length > 0) {
                                temp_number += item[0].PRICE;
                            }
                        });
                        temp = temp.replace('{0}', priceshowflag ? "" : new Intl.NumberFormat("en-US", { maximumFractionDigits: 2 }).format(temp_number));
                    }
                    else {
                        temp = temp.replace('{0}', priceshowflag ? "" : '0');
                    }
                    if (temp_all == null)
                        temp_all = temp;
                    else
                        temp_all += temp;
                }
                total_footer = total_footer.replace('{pricetrend}', temp_all);
            }
            else {
                total_footer = total_footer.replace('{pricetrend}', '');
            }
            $(".datatable tbody").append(total_footer);
            pricecolor();

            $('#all').click();

            //mpprice_terget();
            //$("#all").removeClass("fa-minus-square").addClass("fa-plus-square");
        }

        $(document).on("change", "input[type='radio']", function (event) {
            console.log(event);
            getTableData();
        });

        $(document).on("click", ".fa:not('#all')", function () {
            var thisIndex = $(".fa").index(this);
            var thisTr = $(this).closest("tr");
            var nextTr = (thisIndex + 1 != $(".fa").length) ? $(".fa").eq(thisIndex + 1).closest("tr") : $(".table tbody tr").last();
            var thisTrIndex = $(".table tbody tr").index(thisTr);
            var endTrIndex = $(".table tbody tr").index(nextTr);

            var plusorminus = $(this).hasClass("fa-minus-square");
            if (plusorminus) {
                for (var i = thisTrIndex + 1; i < endTrIndex; i++) {
                    var haswarning = $(".table tbody tr").eq(i).hasClass('warning');
                    if (!haswarning) $(".table tbody tr").eq(i).addClass("hidden");
                }
                $(this).removeClass("fa-minus-square").addClass("fa-plus-square");
            } else {
                for (var i = thisTrIndex + 1; i < endTrIndex; i++) {
                    var haswarning = $(".table tbody tr").eq(i).hasClass('warning');
                    if (!haswarning) $(".table tbody tr").eq(i).removeClass("hidden");
                }
                $(this).removeClass("fa-plus-square").addClass("fa-minus-square");
            }
        });

        $(document).on("click", "#all", function () {
            var plusorminus = $(this).hasClass("fa-minus-square");
            if (plusorminus) {
                $.each($(".table tbody tr:not(:last-child)"), function (index, data) {
                    var hasIcon = $(data).find('td').eq(0).find('i');
                    if (hasIcon.length > 0) {
                        $(data).find('td').eq(0).find('i').removeClass("fa-minus-square").addClass("fa-plus-square");
                        return;
                    }

                    var hashidden = $(data).hasClass('hidden');
                    if (!hashidden) {
                        var haswarning = $(data).hasClass('warning');
                        if (!haswarning) $(data).addClass('hidden');
                    }
                });

                $(this).removeClass("fa-minus-square").addClass("fa-plus-square");
            } else {
                $.each($(".table tbody tr:not(:last-child)"), function (index, data) {
                    var hashidden = $(data).hasClass('hidden');
                    if (hashidden) {
                        var haswarning = $(data).hasClass('warning');
                        if (!haswarning) $(data).removeClass('hidden');
                    }

                    var hasIcon = $(data).find('td').eq(0).find('i');
                    if (hasIcon.length > 0) {
                        $(data).find('td').eq(0).find('i').removeClass("fa-plus-square").addClass("fa-minus-square");
                    }
                });

                $(this).removeClass("fa-plus-square").addClass("fa-minus-square");
            }
        });

        function pricecolor() {
            var tds = $("td.text-right:not(.usage)");
            $.each(tds, function (index, value) {
                var price = $(value).text();
                price = price.replace(/,/g, "");
                if (price != "") {
                    var numberprice = parseFloat(price);
                    if (price > 0) {
                        $(value).css("color", "blue");
                    } else if (price == 0) {
                        $(value).addClass("text-muted");
                    } else {
                        $(value).css("color", "red");
                    }
                }
            });
        }

        function mpprice_terget() {
            if (mpprice_config < 4)
                $("th.mpprice3, th.mpamount3, td.mpprice3, td.mpamount3").addClass('hidden');
            if (mpprice_config < 3)
                $("th.mpprice2, th.mpamount2, td.mpprice2, td.mpamount2").addClass('hidden');
            if (mpprice_config < 2)
                $("th.mpprice1, th.mpamount1, td.mpprice1, td.mpamount1").addClass('hidden');
            if (mpprice_config < 1)
                $("th.mpprice, th.mpamount, td.mpprice, td.mpamount").addClass('hidden');
        }

        $('.pane-hScroll').scroll(function () {
            $('.pane-vScroll').width($('.pane-hScroll').width() + $('.pane-hScroll').scrollLeft());
        });
    </script>
</body>
</html>
