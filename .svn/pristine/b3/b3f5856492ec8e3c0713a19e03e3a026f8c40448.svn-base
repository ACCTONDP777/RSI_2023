//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RSI.CAP
{
    using System.Runtime.Serialization;
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "AuoAuthenticationUserForModule", Namespace = "http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class AuoAuthenticationUserForModule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BossLevelField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ComeDateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyAddressField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyPhoneField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeKindField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GenderField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HaveActiveDirectoryAccountField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeAddressField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIDLField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MarriedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonalIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneExtensionField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhsField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime QuitDateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferBossLevelField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferDepartmentIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferEmpNoField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferTitleField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday
        {
            get
            {
                return this.BirthdayField;
            }
            set
            {
                if ((this.BirthdayField.Equals(value) != true))
                {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BossLevel
        {
            get
            {
                return this.BossLevelField;
            }
            set
            {
                if ((this.BossLevelField.Equals(value) != true))
                {
                    this.BossLevelField = value;
                    this.RaisePropertyChanged("BossLevel");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ComeDate
        {
            get
            {
                return this.ComeDateField;
            }
            set
            {
                if ((this.ComeDateField.Equals(value) != true))
                {
                    this.ComeDateField = value;
                    this.RaisePropertyChanged("ComeDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyAddress
        {
            get
            {
                return this.CompanyAddressField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CompanyAddressField, value) != true))
                {
                    this.CompanyAddressField = value;
                    this.RaisePropertyChanged("CompanyAddress");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName
        {
            get
            {
                return this.CompanyNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true))
                {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyPhone
        {
            get
            {
                return this.CompanyPhoneField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CompanyPhoneField, value) != true))
                {
                    this.CompanyPhoneField = value;
                    this.RaisePropertyChanged("CompanyPhone");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country
        {
            get
            {
                return this.CountryField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CountryField, value) != true))
                {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentId
        {
            get
            {
                return this.DepartmentIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DepartmentIdField, value) != true))
                {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain
        {
            get
            {
                return this.DomainField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DomainField, value) != true))
                {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Education
        {
            get
            {
                return this.EducationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EducationField, value) != true))
                {
                    this.EducationField = value;
                    this.RaisePropertyChanged("Education");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EmailField, value) != true))
                {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeId
        {
            get
            {
                return this.EmployeeIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EmployeeIdField, value) != true))
                {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeKind
        {
            get
            {
                return this.EmployeeKindField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EmployeeKindField, value) != true))
                {
                    this.EmployeeKindField = value;
                    this.RaisePropertyChanged("EmployeeKind");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Gender
        {
            get
            {
                return this.GenderField;
            }
            set
            {
                if ((this.GenderField.Equals(value) != true))
                {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HaveActiveDirectoryAccount
        {
            get
            {
                return this.HaveActiveDirectoryAccountField;
            }
            set
            {
                if ((this.HaveActiveDirectoryAccountField.Equals(value) != true))
                {
                    this.HaveActiveDirectoryAccountField = value;
                    this.RaisePropertyChanged("HaveActiveDirectoryAccount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeAddress
        {
            get
            {
                return this.HomeAddressField;
            }
            set
            {
                if ((object.ReferenceEquals(this.HomeAddressField, value) != true))
                {
                    this.HomeAddressField = value;
                    this.RaisePropertyChanged("HomeAddress");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone
        {
            get
            {
                return this.HomePhoneField;
            }
            set
            {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true))
                {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                if ((this.IsActiveField.Equals(value) != true))
                {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved
        {
            get
            {
                return this.IsApprovedField;
            }
            set
            {
                if ((this.IsApprovedField.Equals(value) != true))
                {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIDL
        {
            get
            {
                return this.IsIDLField;
            }
            set
            {
                if ((this.IsIDLField.Equals(value) != true))
                {
                    this.IsIDLField = value;
                    this.RaisePropertyChanged("IsIDL");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocked
        {
            get
            {
                return this.IsLockedField;
            }
            set
            {
                if ((this.IsLockedField.Equals(value) != true))
                {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Job
        {
            get
            {
                return this.JobField;
            }
            set
            {
                if ((object.ReferenceEquals(this.JobField, value) != true))
                {
                    this.JobField = value;
                    this.RaisePropertyChanged("Job");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Married
        {
            get
            {
                return this.MarriedField;
            }
            set
            {
                if ((this.MarriedField.Equals(value) != true))
                {
                    this.MarriedField = value;
                    this.RaisePropertyChanged("Married");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone
        {
            get
            {
                return this.MobilePhoneField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true))
                {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalId
        {
            get
            {
                return this.PersonalIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PersonalIdField, value) != true))
                {
                    this.PersonalIdField = value;
                    this.RaisePropertyChanged("PersonalId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneExtension
        {
            get
            {
                return this.PhoneExtensionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PhoneExtensionField, value) != true))
                {
                    this.PhoneExtensionField = value;
                    this.RaisePropertyChanged("PhoneExtension");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phs
        {
            get
            {
                return this.PhsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PhsField, value) != true))
                {
                    this.PhsField = value;
                    this.RaisePropertyChanged("Phs");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime QuitDate
        {
            get
            {
                return this.QuitDateField;
            }
            set
            {
                if ((this.QuitDateField.Equals(value) != true))
                {
                    this.QuitDateField = value;
                    this.RaisePropertyChanged("QuitDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferBossLevel
        {
            get
            {
                return this.ReferBossLevelField;
            }
            set
            {
                if ((this.ReferBossLevelField.Equals(value) != true))
                {
                    this.ReferBossLevelField = value;
                    this.RaisePropertyChanged("ReferBossLevel");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferDepartmentId
        {
            get
            {
                return this.ReferDepartmentIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ReferDepartmentIdField, value) != true))
                {
                    this.ReferDepartmentIdField = value;
                    this.RaisePropertyChanged("ReferDepartmentId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferEmpNo
        {
            get
            {
                return this.ReferEmpNoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ReferEmpNoField, value) != true))
                {
                    this.ReferEmpNoField = value;
                    this.RaisePropertyChanged("ReferEmpNo");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferTitle
        {
            get
            {
                return this.ReferTitleField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ReferTitleField, value) != true))
                {
                    this.ReferTitleField = value;
                    this.RaisePropertyChanged("ReferTitle");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Site
        {
            get
            {
                return this.SiteField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SiteField, value) != true))
                {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TitleField, value) != true))
                {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UserIdField, value) != true))
                {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UserNameField, value) != true))
                {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType
        {
            get
            {
                return this.UserTypeField;
            }
            set
            {
                if ((this.UserTypeField.Equals(value) != true))
                {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "CAP.IAuthorizationModuleService")]
    public interface IAuthorizationModuleService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetWinxtarAndDMZServerPath", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetWinxtarAndDMZServerPathResponse" +
            "")]
        string[] GetWinxtarAndDMZServerPath();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetWinxtarAndDMZServerPath", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetWinxtarAndDMZServerPathResponse" +
            "")]
        System.Threading.Tasks.Task<string[]> GetWinxtarAndDMZServerPathAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetSiteInfo", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetSiteInfoResponse")]
        System.Data.DataSet GetSiteInfo(string AppPath);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetSiteInfo", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetSiteInfoResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSiteInfoAsync(string AppPath);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/CheckTerminal", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/CheckTerminalResponse")]
        string CheckTerminal(string userName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/CheckTerminal", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/CheckTerminalResponse")]
        System.Threading.Tasks.Task<string> CheckTerminalAsync(string userName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetUserByUserName", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetUserByUserNameResponse")]
        RSI.CAP.AuoAuthenticationUserForModule GetUserByUserName(string Domain, string UserName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetUserByUserName", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetUserByUserNameResponse")]
        System.Threading.Tasks.Task<RSI.CAP.AuoAuthenticationUserForModule> GetUserByUserNameAsync(string Domain, string UserName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetUserName", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetUserNameResponse")]
        string GetUserName(string employeeid);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetUserName", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetUserNameResponse")]
        System.Threading.Tasks.Task<string> GetUserNameAsync(string employeeid);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetSimulationCheckInfo", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetSimulationCheckInfoResponse")]
        string[] GetSimulationCheckInfo();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetSimulationCheckInfo", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetSimulationCheckInfoResponse")]
        System.Threading.Tasks.Task<string[]> GetSimulationCheckInfoAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/CheckTokenValid", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/CheckTokenValidResponse")]
        RSI.CAP.CheckTokenValidResponse CheckTokenValid(RSI.CAP.CheckTokenValidRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/CheckTokenValid", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/CheckTokenValidResponse")]
        System.Threading.Tasks.Task<RSI.CAP.CheckTokenValidResponse> CheckTokenValidAsync(RSI.CAP.CheckTokenValidRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/UpdateToken", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/UpdateTokenResponse")]
        bool UpdateToken(string token);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/UpdateToken", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/UpdateTokenResponse")]
        System.Threading.Tasks.Task<bool> UpdateTokenAsync(string token);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetADPasswordChangeDate", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetADPasswordChangeDateResponse")]
        System.DateTime GetADPasswordChangeDate(string UserName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAuthorizationModuleService/GetADPasswordChangeDate", ReplyAction = "http://tempuri.org/IAuthorizationModuleService/GetADPasswordChangeDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetADPasswordChangeDateAsync(string UserName);
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "CheckTokenValid", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class CheckTokenValidRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string token;

        public CheckTokenValidRequest()
        {
        }

        public CheckTokenValidRequest(string token)
        {
            this.token = token;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "CheckTokenValidResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class CheckTokenValidResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool CheckTokenValidResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string UserInfo;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public string CookieName;

        public CheckTokenValidResponse()
        {
        }

        public CheckTokenValidResponse(bool CheckTokenValidResult, string UserInfo, string CookieName)
        {
            this.CheckTokenValidResult = CheckTokenValidResult;
            this.UserInfo = UserInfo;
            this.CookieName = CookieName;
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorizationModuleServiceChannel : RSI.CAP.IAuthorizationModuleService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizationModuleServiceClient : System.ServiceModel.ClientBase<RSI.CAP.IAuthorizationModuleService>, RSI.CAP.IAuthorizationModuleService
    {

        public AuthorizationModuleServiceClient()
        {
        }

        public AuthorizationModuleServiceClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public AuthorizationModuleServiceClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public AuthorizationModuleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public AuthorizationModuleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public string[] GetWinxtarAndDMZServerPath()
        {
            return base.Channel.GetWinxtarAndDMZServerPath();
        }

        public System.Threading.Tasks.Task<string[]> GetWinxtarAndDMZServerPathAsync()
        {
            return base.Channel.GetWinxtarAndDMZServerPathAsync();
        }

        public System.Data.DataSet GetSiteInfo(string AppPath)
        {
            return base.Channel.GetSiteInfo(AppPath);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetSiteInfoAsync(string AppPath)
        {
            return base.Channel.GetSiteInfoAsync(AppPath);
        }

        public string CheckTerminal(string userName)
        {
            return base.Channel.CheckTerminal(userName);
        }

        public System.Threading.Tasks.Task<string> CheckTerminalAsync(string userName)
        {
            return base.Channel.CheckTerminalAsync(userName);
        }

        public RSI.CAP.AuoAuthenticationUserForModule GetUserByUserName(string Domain, string UserName)
        {
            return base.Channel.GetUserByUserName(Domain, UserName);
        }

        public System.Threading.Tasks.Task<RSI.CAP.AuoAuthenticationUserForModule> GetUserByUserNameAsync(string Domain, string UserName)
        {
            return base.Channel.GetUserByUserNameAsync(Domain, UserName);
        }

        public string GetUserName(string employeeid)
        {
            return base.Channel.GetUserName(employeeid);
        }

        public System.Threading.Tasks.Task<string> GetUserNameAsync(string employeeid)
        {
            return base.Channel.GetUserNameAsync(employeeid);
        }

        public string[] GetSimulationCheckInfo()
        {
            return base.Channel.GetSimulationCheckInfo();
        }

        public System.Threading.Tasks.Task<string[]> GetSimulationCheckInfoAsync()
        {
            return base.Channel.GetSimulationCheckInfoAsync();
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RSI.CAP.CheckTokenValidResponse RSI.CAP.IAuthorizationModuleService.CheckTokenValid(RSI.CAP.CheckTokenValidRequest request)
        {
            return base.Channel.CheckTokenValid(request);
        }

        public bool CheckTokenValid(string token, out string UserInfo, out string CookieName)
        {
            RSI.CAP.CheckTokenValidRequest inValue = new RSI.CAP.CheckTokenValidRequest();
            inValue.token = token;
            RSI.CAP.CheckTokenValidResponse retVal = ((RSI.CAP.IAuthorizationModuleService)(this)).CheckTokenValid(inValue);
            UserInfo = retVal.UserInfo;
            CookieName = retVal.CookieName;
            return retVal.CheckTokenValidResult;
        }

        public System.Threading.Tasks.Task<RSI.CAP.CheckTokenValidResponse> CheckTokenValidAsync(RSI.CAP.CheckTokenValidRequest request)
        {
            return base.Channel.CheckTokenValidAsync(request);
        }

        public bool UpdateToken(string token)
        {
            return base.Channel.UpdateToken(token);
        }

        public System.Threading.Tasks.Task<bool> UpdateTokenAsync(string token)
        {
            return base.Channel.UpdateTokenAsync(token);
        }

        public System.DateTime GetADPasswordChangeDate(string UserName)
        {
            return base.Channel.GetADPasswordChangeDate(UserName);
        }

        public System.Threading.Tasks.Task<System.DateTime> GetADPasswordChangeDateAsync(string UserName)
        {
            return base.Channel.GetADPasswordChangeDateAsync(UserName);
        }
    }
}
